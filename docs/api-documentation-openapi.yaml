openapi: 3.0.0
tags:
  - name: Presentation Definition Management
    description: APIs for Presentation Definition related operations
  - name: VC Submission
    description: APIs for Verifiable Credential submission related operations
  - name: VC verification API
    description: APIs for Verifiable Credential Verification related operations
  - name: VP Request Management
    description: APIs for Verifiable Presentation Authorization Request related operations
  - name: VP Submission
    description: APIs for Verifiable Presentation submission related operations
  - name: Well Known
    description: API for did discovery through well known endpoint
info:
  title: OpenID4VP Verifier API - Inji Verify
  version: 1.0.2
  contact:
    name: MOSIP
    url: "https://mosip.io"
    email: mosip.emailnotifier@gmail.com
  license:
    name: MPL-2.0
    url: "https://www.mozilla.org/en-US/MPL/2.0/"
  description: API for OpenID4VP verifier supporting direct_post and cross-device flow
paths:
  /vp-request:
    post:
      summary: Create a new verification request
      description: "Using its response the UI can build /authorize endpoint and render it in qrcode form based on cross or same device flow. example - openid4vp://authorize?{RESPONSE}"
      operationId: createVPRequest
      tags:
        - VP Request Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VPRequestCreate"
            example:
              clientId: client123
              presentationDefinitionId: age_verification
      responses:
        "201":
          description: VP Request created successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/VPRequestResponse"
                  - $ref: "#/components/schemas/VPRequestResponseByReference"
        "400":
          description: VP Request not created due to bad request. Fields missing or type mismatch in body sent.
        "404":
          description: VP Request not created due to PresentationDefinition not found for given ID.

  "/vp-request/{requestId}":
    get:
      summary: Get VP Request JWT
      description: This API returns the JWT for the VP request created.
      operationId: getVPRequestJwt
      tags:
        - VP Request Management
      parameters:
        - name: requestId
          description: Request Id for which you want to get the JWT for
          in: path
          required: true
          schema:
            type: string
          example: req_12345
      responses:
        "200":
          description: VP Request JWT retrieved successfully
          content:
            application/oauth-authz-req+jwt:
              schema:
                type: string
                format: jwt
                example: eyJhbGciOiJFRERTQSIsInR5cCI6Im9hdXRoLWF1dGh6LXJlcStqd3QiLCJraWQiOiJkaWQ6ZXhhbXBsZTppc3N1ZXItZGVmYXVsdC1rZXkifQ.eyJjbGllbnRfaWQiOiJkaWQ6ZXhhbXBsZTpjbGllbnQiLCJpc3MiOiJkaWQ6ZXhhbXBsZTpjbGllbnQiLCJyZXNwb25zZV90eXBlIjoidnBfdG9rZW4iLCJyZXNwb25zZV9tb2RlIjoiZGlyZWN0X3Bvc3QiLCJub25jZSI6ImFzaGRmamFoZHNmbGprYXNkZiIsImV4cCI6MTY3ODkzMDQwMCwiaWF0IjoxNjc4OTI5ODAwfQ.EXAMPLE_EDDSA_SIGNATURE_HERE
        "404":
          description: VP Request not found for given request id
  "/vp-request/{requestId}/status":
    get:
      summary: Get VP Request status
      description: This API returns the current status of the transaction and returns not found if there is no transaction with given request id.
      operationId: getVPRequestStatus
      tags:
        - VP Request Management
      parameters:
        - name: requestId
          description: Request Id for which you want to get the status for
          in: path
          required: true
          schema:
            type: string
          example: req_12345
      responses:
        "200":
          description: VP Request status retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/status"
        "404":
          description: VP Request not found for given request id
  /vp-submission/direct-post:
    post:
      summary: Submit authorization response
      description: API to submit the VP token
      operationId: submitResponse
      tags:
        - VP Submission
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AuthorizationResponse"
            example:
              vp_token: eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2cCI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSJdLCJ0eXBlIjpbIlZlcmlmaWFibGVQcmVzZW50YXRpb24iXSwidmVyaWZpYWJsZUNyZWRlbnRpYWwiOlsiZXlKaGJHY2lPaUpGVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SmhkV1FpT2lKb2RIUndjem92TDNabGNtbG1lUzVrWlhZeExtMXZjMmx3TG01bGRDOXlaWE53YjI1elpYTWlMQ0pqYkdGcGJYTWlPbnNpWVdkbElqb3hPSDBzSW1semN5STZJbWgwZEhCek9pOHZkbVZ5YVdaNUxtUmxkakV1Ylc5emFYQXVibVYwTDJselozSmhiblJsY25NaUxDSnVZbVlpT2pFMk9ESTVOekF3TURBc0ltVjRjQ0k2TVRjd05qazNNREF3TUgwLnNpZ25hdHVyZSJdfSwibm9uY2UiOiJub25jZV8xMjM0NSIsImF1ZCI6ImNsaWVudDEyMyJ9.signature
              state: state_abcde
              presentation_submission:
                id: submission_12345
                definition_id: age_verification_1
                descriptor_map:
                  - id: age_credential
                    format: jwt_vc
                    path: "$.verifiableCredential[0]"
      responses:
        "200":
          description: Response processed successfully / Error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseAcknowledgement"
              examples:
                success:
                  value:
                    redirectUri: "https://verify.dev1.mosip.net/"
                error:
                  value:
                    error: invalid_request
                    errorDescription: unsupported%20client_id_scheme
  /vc-submission:
    post:
      summary: Submit Verifiable Credential (VC)
      description: Submits a Verifiable Credential. If transactionId is not provided, the server generates one.
      operationId: submitVC
      tags:
        - VC Submission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VCSubmissionRequest"
            example:
              vc:
                "@context": [ "https://www.w3.org/2018/credentials/v1" ]
                type: [ "VerifiableCredential" ]
                issuer: "https://example.org/issuers/123"
                issuanceDate: "2023-01-01T00:00:00Z"
                credentialSubject:
                  id: "did:example:abc"
                  age: 25
                proof:
                  type: Ed25519Signature2020
                  created: "2023-01-01T00:00:00Z"
                  proofPurpose: assertionMethod
                  verificationMethod: "https://example.org/keys/1"
                  jws: "eyJ...signature"
              transactionId: txn_abc123
      responses:
        "200":
          description: VC submission accepted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VCSubmissionResponse"
              example:
                transactionId: txn_abc123
  "/vp-result/{transactionId}":
    parameters:
      - schema:
          type: string
        name: transactionId
        description: Transaction Id for which you want to get the Vp token for
        in: path
        required: true
    get:
      summary: Get the VP token for a request
      description: API to get the VP token for given transaction id
      tags:
        - VP Request Management
      responses:
        "200":
          description: Response processed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VpTokenResult"
        "404":
          description: No result found for given transaction id or Given transaction ID is invalid.
      operationId: get-vp-result-requestId-presentations
  "/vp-definition/{id}":
    parameters:
      - schema:
          type: string
        name: id
        description: Presentation Definition Id for which you want to get the Presentation Definition for
        in: path
        required: true
    get:
      summary: Get presentation definition
      description: Allows  user to fetch the presentation definition created/submitted when a new auth request has been created.
      tags:
        - Presentation Definition Management
      responses:
        "200":
          description: Presentation definition is found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PresentationDefinition"
        "404":
          description: Presentation definition is not found
      operationId: get-presentation-id
  /vc-verification:
    post:
      summary: Get the submitted VC verified
      description: API to perform the server side VC verification to check the integrity of the VC submitted
      tags:
        - VC verification API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VCVerificationRequest"
        description: Vc to be verified
      responses:
        "200":
          description: VC verification status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VCVerificationResult"
      operationId: post-verify-vc
  /well-known/did.json:
    post:
      summary: Get the did document
      description: API to get the did document for the given did
      tags:
        - Well Known
      responses:
        "200":
          description: did document found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DIDDocument"
      operationId: get-did-json
components:
  schemas:
    DIDDocument:
      type: object
      description: |
        A DID Document is a JSON-LD document that describes a Decentralized Identifier (DID),
        including its associated public keys, authentication methods, services, and other
        relevant information. It enables trust and verifiable interactions.
      properties:
        '@context':
          type: array
          items:
            type: string
          description: >
            The JSON-LD context for the DID Document. This specifies the terms and
            their definitions used within the document, often including
            "https://www.w3.org/ns/did/v1" and other relevant contexts (e.g., for security vocabularies).
          example:
            - https://www.w3.org/ns/did/v1
            - https://w3id.org/security/suites/jws-2020/v1
            - https://w3id.org/security/suites/ed25519-2020/v1
        id:
          type: string
          description: The Decentralized Identifier (DID) that this DID Document describes.
          pattern: '^did:[a-z0-9]+:.*$'
          example: did:example:123456789
        verificationMethod:
          type: array
          items:
            $ref: "#/components/schemas/VerificationMethod"
          description: A set of verification methods (e.g., public keys) that can be used to verify digital signatures and other proofs made by the DID subject.
        authentication:
          type: array
          items:
            oneOf:
              - type: string
                description: Reference to a verification method by its ID.
              - $ref: '#/components/schemas/VerificationMethod'
          description: >
            A set of verification methods used to authenticate the DID subject.
            Typically, these are used for proving control over the DID.
            Can be a full `VerificationMethod` object or a string reference to one.
        assertionMethod:
          type: array
          items:
            oneOf:
              - type: string
                description: Reference to a verification method by its ID.
              - $ref: '#/components/schemas/VerificationMethod'
          description: >
            A set of verification methods used to assert claims about the DID subject.
            Can be a full `VerificationMethod` object or a string reference to one.
        keyAgreement:
          type: array
          items:
            oneOf:
              - type: string
                description: Reference to a verification method by its ID.
              - $ref: '#/components/schemas/VerificationMethod'
          description: >
            A set of verification methods used for key agreement (e.g., establishing
            confidential communication). Can be a full `VerificationMethod` object or a string reference to one.
        capabilityInvocation:
          type: array
          items:
            oneOf:
              - type: string
                description: Reference to a verification method by its ID.
              - $ref: '#/components/schemas/VerificationMethod'
          description: >
            A set of verification methods used to invoke capabilities delegated by
            the DID subject. Can be a full `VerificationMethod` object or a string reference to one.
        capabilityDelegation:
          type: array
          items:
            oneOf:
              - type: string
                description: Reference to a verification method by its ID.
              - $ref: '#/components/schemas/VerificationMethod'
          description: >
            A set of verification methods used to delegate capabilities to other parties.
            Can be a full `VerificationMethod` object or a string reference to one.
        service:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          description: >
            A set of services that can be used to interact with the DID subject.
            These might include endpoints for messaging, identity hubs, etc.
        controller:
          oneOf:
            - type: string
              description: The DID of a controller that can manage this DID Document.
            - type: array
              items:
                type: string
              description: An array of DIDs of controllers that can manage this DID Document.
          description: >
            A DID (or set of DIDs) that are authorized to manage this DID Document.
            If not present, the DID itself is assumed to be the controller.
          example: did:example:controller123
        alsoKnownAs:
          type: array
          items:
            type: string
          description: >
            Other DIDs or URIs that this DID is known by. Used for linking related identifiers.
          example:
            - did:another:alias456
            - https://example.com/alice/profile

    VerificationMethod:
      type: object
      description: >
        A verification method represents a public key or other cryptographic material
        that can be used for various verification purposes.
      required:
        - id
        - type
        - controller
      properties:
        id:
          type: string
          description: A unique identifier for the verification method within the DID Document.
          example: did:example:123#keys-1
        type:
          type: string
          description: >
            The type of verification method, indicating the cryptographic suite.
            Examples include "Ed25519VerificationKey2020", "JsonWebKey2020", "Secp256k1VerificationKey2018".
          example: Ed25519VerificationKey2020
        controller:
          type: string
          description: The DID that is authorized to use this verification method.
          example: did:example:123
        publicKeyMultibase:
          type: string
          description: >
            The public key expressed in Multibase format. This is a common way to
            encode public keys for different cryptographic curves.
          example: z6MkhPCXw1tV8wR2rWqC2kF7zX9b2D9M9m3yD5rN2J2F7zW
        publicKeyJwk:
          type: object
          description: >
            The public key expressed as a JSON Web Key (JWK) object.
            This is suitable for various cryptographic algorithms.
          properties:
            kty: { type: string, description: "Key Type (e.g., 'OKP' for Octet Key Pair, 'EC' for Elliptic Curve)" }
            crv: { type: string, description: "Curve (e.g., 'Ed25519', 'P-256', 'secp256k1')" }
            x: { type: string, description: "x coordinate for EC keys, or public key for OKP (Multibase encoded)" }
            y: { type: string, description: "y coordinate for EC keys" }
          example:
            kty: OKP
            crv: Ed25519
            x: 'VCx2-2S5m0d_n0SgN84G2z2c5J1L0x0W0t0P0A0E0C0M'
        blockchainAccountId:
          type: string
          description: A reference to a blockchain account ID (e.g., an Ethereum address).
          example: eip155:1:0xab16a96f399d9b6a12b87f0b9f0e1f2e3d4c
        ethereumAddress:
          type: string
          description: An Ethereum address.
          pattern: '^0x[a-fA-F0-9]{40}$'
          example: "0xab16a96f399d9b6a12b87f0b9f0e1f2e3d4c1234"
    Service:
      type: object
      description: >
        A service endpoint for interacting with the DID subject.
        Services provide ways for others to discover and communicate with the DID.
      required:
        - id
        - type
        - serviceEndpoint
      properties:
        id:
          type: string
          description: A unique identifier for the service within the DID Document.
          example: did:example:123#service-1
        type:
          type: string
          description: The type of service (e.g., "DIDCommMessaging", "CredentialRepository", "IdentityHub").
          example: DIDCommMessaging
        serviceEndpoint:
          oneOf:
            - type: string
              format: uri
              description: The URI of the service endpoint.
            - type: array
              items:
                type: string
                format: uri
              description: An array of URIs for the service endpoint.
            - type: object
              description: A JSON object representing a more complex service endpoint.
          description: >
            The endpoint for the service. Can be a single URI, an array of URIs,
            or a JSON object for more complex service definitions.
          example: https://example.com/didcomm
        routingKeys:
          type: array
          items:
            type: string
          description: For DIDCommMessaging, a list of routing keys.
          example:
            - 'did:example:123#key-agreements-1'
        accept:
          type: array
          items:
            type: string
          description: For DIDCommMessaging, a list of supported message protocols.
          example:
            - 'didcomm/v2'
            - 'didcomm/aip2;env=rfc587'
    VPRequestCreate:
      type: object
      required:
        - clientId
      allOf:
        - oneOf:
            - required:
                - presentationDefinitionId
            - required:
                - presentationDefinition
      properties:
        clientId:
          type: string
          description: ID of the client asking to create a new Verifiable Presentation request
        presentationDefinitionId:
          type: string
          description: Either presentationDefinitionId or presentationDefinition should be passed. A predefined presentation definition Id so that the user does not need to pass the presentation definition
        presentationDefinition:
          $ref: "#/components/schemas/PresentationDefinition"
        transactionId:
          description: A unique id of the verifiable presentation request transaction. This is optional and will be generated on server if not passed.
          type: string
    VPRequestResponseByReference:
      type: object
      properties:
        transactionId:
          description: A unique id of the verifiable presentation request transaction
          type: string
          example: urn:uuid:f82f281e-8d96-419b-b413-5a0459739a7b
        requestId:
          type: string
          description: A unique id of the verifiable presentation request
          example: urn:uuid:6d538e1b-2615-4927-bfd2-094e9f73f2a1
        requestUri:
          description: The URL to fetch the verifiable presentation request
          type: string
          format: uri
          example: https://example.com/vp-requests/6d538e1b-2615-4927-bfd2-094e9f73f2a1
        expiresAt:
          type: integer
          format: int64
          description: Expiry of a transaction as a Unix timestamp (seconds since epoch).
          example: 1752838929
    VPRequestResponse:
      type: object
      properties:
        transactionId:
          description: A unique id of the verifiable presentation request transaction
          type: string
        requestId:
          type: string
          description: A unique id of the verifiable presentation request
        authorizationDetails:
          $ref: "#/components/schemas/AuthorizationRequestResponse"
        expiresAt:
          type: integer
          description: Expiry of a transaction. Defaults to 5 minutes from creation of auth request.
    status:
      type: object
      description: Status of the verifiable presentation request transaction
      properties:
        status:
          type: string
          description: current status
          enum:
            - ACTIVE
            - VP_SUBMITTED
            - EXPIRED
    verificationStatus:
      type: string
      description: Status of the verifiable VC verification
      enum:
        - SUCCESS
        - EXPIRED
        - INVALID
    AuthorizationResponse:
      type: object
      required:
        - vp_token
        - presentation_submission
        - state
      properties:
        vp_token:
          type: string
          description: vp_token - REQUIRED. JSON String or JSON object that MUST contain a single Verifiable Presentation or an array of JSON Strings and JSON objects each of them containing a Verifiable Presentations.
        state:
          type: string
          description: Its the requestId created for the transaction
        presentationSubmission:
          type: object
          required:
            - id
            - definitionId
            - descriptorMap
          properties:
            id:
              type: string
              description: Unique ID for mapping verifiable presentation
            definitionId:
              description: Unique ID for mapping verifiable presentation definition
              type: string
            descriptorMap:
              type: array
              description: Contains details on VC type and path details for fetching the required field.
              items:
                $ref: "#/components/schemas/DescriptorMap"
    DescriptorMap:
      type: object
      required:
        - id
        - format
        - path
      properties:
        id:
          type: string
          description: ID of the descriptor map
        format:
          type: string
          description: Format of the verifiable presentation
        path:
          type: string
          description: Root path of the verifiable presentation
        path_nested:
          $ref: "#/components/schemas/PathNested"
    PathNested:
      type: object
      description: Contains nested path for each verifiable presentation
      required:
        - format
        - path
      properties:
        format:
          type: string
          description: Format of the verifiable presentation
        path:
          type: string
          description: Path of the field in the verifiable presentation
    ResponseAcknowledgement:
      type: object
      properties:
        redirectUri:
          type: string
          description: URL for the presenter to redirect back after the verifiable presentation submission
          format: uri
        error:
          type: string
          description: Error code for submission request
        errorDescription:
          type: string
          description: Error description for submission request
    AuthorizationRequestResponse:
      title: AuthorizationRequestResponse
      type: object
      properties:
        responseUri:
          type: string
          description: URL for the wallet to submit the verifiable presentation
          format: uri
        responseType:
          type: string
          description: Response type of the verifiable presentation
        clientId:
          type: string
          description: Client id of the verifier
        nonce:
          type: string
          description: Nonce for encryption. It is used to securely bind the Verifiable Presentation(s) provided by the Wallet to the particular transaction
        presentationDefinition:
            $ref: "#/components/schemas/PresentationDefinition"
        iat:
          type: integer
          format: unixtime
          description: Issued time
    VCSubmissionRequest:
      title: VCSubmissionRequest
      type: object
      required:
        - vc
      properties:
        vc:
          type: object
          description: The complete Verifiable Credential to be submitted
        transactionId:
          type: string
          description: Optional transaction ID; if not provided, one will be generated by the server
    VCSubmissionResponse:
      title: VCSubmissionResponse
      type: object
      required:
        - transactionId
      properties:
        transactionId:
          type: string
          description: Unique transaction ID assigned to the VC submission
    PresentationDefinition:
      title: PresentationDefinition
      required:
        - id
        - input_descriptors
      type: object
      properties:
        id:
          type: string
        input_descriptors:
          type: array
          items:
            $ref: "#/components/schemas/InputDescriptors"
        submission_requirements:
          type: array
          items:
            $ref: "#/components/schemas/SubmissionRequirements"
    SubmissionRequirements:
      title: SubmissionRequirements
      required:
        - id
      type: object
      properties:
        name:
          type: string
        rule:
          type: string
        count:
          type: integer
        from:
          type: string
    InputDescriptors:
      title: InputDescriptors
      type: object
      properties:
        id:
          type: string
        group:
          type: array
          items:
            type: string
        format:
          type: object
        constrains:
          type: object
          properties:
            fields:
              type: array
              items:
                type: object
                properties:
                  path:
                    type: array
                    items:
                      type: string
                  filter:
                    type: object
                    properties:
                      type:
                        type: string
                      pattern:
                        type: string
    VCVerificationResult:
      title: VCVerificationResult
      type: object
      properties:
        verificationStatus:
          $ref: "#/components/schemas/verificationStatus"
    VCVerificationRequest:
      title: VCVerificationRequest
      type: object
    VpTokenResult:
      title: VpTokenResult
      type: object
      properties:
        transactionId:
          type: string
          description: "Transaction Id for the VP request for which the result needs to be fetched"
        submissionStatus:
          type: string
          description: "Overall status for the VP submission"
          enum:
            - SUCCESS
            - FAILED
        vcResults:
          type: array
          items:
            $ref: "#/components/schemas/VcResult"
    VcResult:
      title: VcResult
      type: object
      description: "Array of VC and its proof verification results"
      properties:
        vc:
          type: string
          description: "VC as a JSON string"
        verificationStatus:
          $ref: "#/components/schemas/verificationStatus"
  securitySchemes:
    ClientIdSecret:
      type: http
      scheme: basic
