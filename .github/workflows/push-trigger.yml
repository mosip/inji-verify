name: inji-verify build upon a push

on:
  release:
    types: [published]
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - '!release-branch'
      - release*
      - master
      - 1.*
      - develop
      - MOSIP*

jobs:
  build-dockers-inji-verify:
    strategy:
      matrix:
        include:
          - SERVICE_LOCATION: "inji-verify"
            SERVICE_NAME: "inji-verify"
      fail-fast: false
    name: ${{ matrix.SERVICE_NAME }}
    uses: mosip/kattu/.github/workflows/docker-build.yml@master
    with:
      SERVICE_LOCATION: ${{ matrix.SERVICE_LOCATION }}
      SERVICE_NAME: ${{ matrix.SERVICE_NAME }}
    secrets:
      DEV_NAMESPACE_DOCKER_HUB: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      ACTOR_DOCKER_HUB: ${{ secrets.ACTOR_DOCKER_HUB }}
      RELEASE_DOCKER_HUB: ${{ secrets.RELEASE_DOCKER_HUB }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  sonar-analysis-inji-verify:
    if: "${{  github.event_name != 'pull_request' }}"
    needs: build-dockers-inji-verify
    uses: mosip/kattu/.github/workflows/npm-sonar-analysis.yml@master-java21
    with:
      SERVICE_LOCATION: ./inji-verify
      SONAR_URL: 'https://sonarcloud.io'
      PROJECT_KEY: 'mosip_inji-verify'
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      ORG_KEY: ${{ secrets.ORG_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  trivy_scan:
    needs: build-dockers-inji-verify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.ACTOR_DOCKER_HUB }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.SERVICE_NAME }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'

      - name: Notify Slack
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: "Trivy scan failed for ${{ matrix.SERVICE_NAME }}"
